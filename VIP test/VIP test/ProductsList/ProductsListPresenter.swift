//
//  ProductsListPresenter.swift
//  VIP test
//
//  Created by LFNAVAR on 2/20/19.
//  Copyright (c) 2019 LFNAVAR. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// Protocol that is called from the interactor to received the response from the API
protocol ProductsListPresentationLogic
{
    func presentProducts(response: ProductsList.FetchProducts.Response)
}

class ProductsListPresenter: ProductsListPresentationLogic
{
    weak var viewController: ProductsListDisplayLogic?
    
    // MARK: Do all the logic to sent the view model to view controller
    
    func presentProducts(response: ProductsList.FetchProducts.Response)
    {
        var displayedProducts: [ProductsList.FetchProducts.ViewModel.DisplayedProduct] = []
        if response.products.isEmpty {
            let displayedProduct = ProductsList.FetchProducts.ViewModel.DisplayedProduct(stationName: "Error al Cargar Productos", statusValue: "No Available", route: false)
            displayedProducts.append(displayedProduct)
        } else {
            for product in response.products {
                let displayedProduct = ProductsList.FetchProducts.ViewModel.DisplayedProduct(stationName: product.stationName!, statusValue: product.statusValue!, route: true)
                displayedProducts.append(displayedProduct)
            }
        }
        let viewModel = ProductsList.FetchProducts.ViewModel(displayedProducts: displayedProducts)
        viewController?.displayProducts(viewModel: viewModel)
        
    }
    
}
