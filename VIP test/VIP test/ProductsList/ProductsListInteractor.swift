//
//  ProductsListInteractor.swift
//  VIP test
//
//  Created by LFNAVAR on 2/20/19.
//  Copyright (c) 2019 LFNAVAR. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// Protocol that is called from the view controller to receive the request
protocol ProductsListBusinessLogic
{
    func fetchProducts(request: ProductsList.FetchProducts.Request)
}

// Protocol that is called from the routing to send data to another view
protocol ProductsListDataStore
{
    var products: [Products]? { get }
}

class ProductsListInteractor: ProductsListBusinessLogic, ProductsListDataStore
{
    // presenter and worker type variables
    var presenter: ProductsListPresentationLogic?
    var worker = ProductsListWorker(productsStore: AlamoFireStore())
    
    // Variable declaration for the protocol ProductsListDataStore
    var products: [Products]?
    
    // MARK: Do call to the API
    
    // function that receive the resquest from the view controller and do the call to get the data from the worker, the data that receive is sent to the Presenter
    func fetchProducts(request: ProductsList.FetchProducts.Request)
    {
        worker.fetchProducts { (products) in
            
            self.products = products
            let response =  ProductsList.FetchProducts.Response(products: products)
            self.presenter?.presentProducts(response: response)
        }
    }
}
